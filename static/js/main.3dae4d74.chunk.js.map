{"version":3,"sources":["bootstrap-components/MyNavbar.js","AgileChecklist.js","bootstrap-components/MyRegisLoginForm.js","LandingPage.js","serviceWorker.js","index.js","App.js"],"names":["MyNavbar","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Component","AgileChecklist","props","simpanChecklist","event","setState","notif","user_checklist","state","checklistWhy","forEach","item","is_checked","push","slug","axios","post","process","user","checklist","then","res","console","log","setInterval","handleChange","target","value","checked","filter","the_why","if_yes_advice","if_no_advice","temp","i","length","bind","practices","this","match","params","data","checklistWhy_temp","practice","is_checked_temp","the_why_temp","p","Object","keys","values","_id","title","description","catch","error","map","index","key","Form","Check","type","Input","defaultChecked","onChange","Label","dangerouslySetInnerHTML","__html","style","fontSize","width50","width","Table","bordered","hover","checklistMapping","Button","onClick","MyRegisLoginForm","onChangeUsername","onChangeSecretcode","onSubmit","username","secretcode","e","preventDefault","window","location","err","Group","controlId","Control","placeholder","name","required","Text","LandingPage","Row","Col","md","Boolean","hostname","ReactDOM","render","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dae4d74.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default class MyNavbar extends Component  {\n    render () {\n        return (\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand href=\"/\">my3pa - Tiga Pilar Agile</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <Nav.Link href=\"https://3pillarsofagile.github.io/\">Kembali ke situs wiki (3pillarsofagile.github.io)</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport axios from 'axios';\n\nimport { Button, Form, Table } from \"react-bootstrap\";\n\n\nclass AgileChecklist extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.simpanChecklist = this.simpanChecklist.bind(this);\n\n        this.state = {\n            practices: [],\n            user: null,\n            checklistWhy: [],\n            notif: null\n        };\n    \n    }\n\n    componentDidMount() {\n        axios.post(process.env.REACT_APP_API_URL+'/userid/'+this.props.match.params.id)\n            .then(res => {\n                console.log(res.data);\n\n                var checklistWhy_temp = []\n\n                res.data.practices.forEach( practice => {\n\n                    var is_checked_temp\n                    var the_why_temp = \"(isi checklist untuk penjelasan)\"\n\n                    res.data.user.checklist.forEach( p => {\n                        \n                        if ( Object.keys(p)[0] === practice.slug ){\n                            \n                            if ( Object.values(p)[0] === true ){\n                                is_checked_temp = true\n                                the_why_temp = practice.if_yes_advice\n                            }else{\n                                is_checked_temp = false\n                                the_why_temp = practice.if_no_advice\n                            }\n                        }\n                        \n                    })\n                    \n                    checklistWhy_temp.push({\n                        id: practice._id,\n                        slug: practice.slug,\n                        title: practice.title,\n                        description: practice.description,\n                        if_no_advice: practice.if_no_advice,\n                        if_yes_advice: practice.if_yes_advice,\n                        is_checked: is_checked_temp,\n                        the_why: the_why_temp\n                    })\n                })\n\n                this.setState( {\n                    practices: res.data.practices,\n                    user: res.data.user,\n                    checklistWhy: checklistWhy_temp\n                } )\n\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    checklistMapping() {\n        return this.state.checklistWhy.map( (item, index) => {\n            const font085 = {fontSize: '0.85em'}\n            return  <tr key={item.id}>\n                        <td>\n                            <Form.Check \n                                type='checkbox'\n                            >\n                                <Form.Check.Input \n                                    type=\"checkbox\"\n                                    value={item.id}\n                                    id={item.slug}\n                                    defaultChecked={item.is_checked ? \"checked\" : false}\n                                    onChange={this.handleChange} />\n                                <Form.Check.Label>{index+1}. {item.title}</Form.Check.Label>\n                                <div className=\"text-muted\" \n                                    dangerouslySetInnerHTML={{__html: item.description}}></div>\n                            </Form.Check>\n                        </td>\n                        <td style={font085}>\n                            <span dangerouslySetInnerHTML={{__html: item.the_why}}></span>\n                        </td>\n                    </tr>\n                    ;\n          })\n    }\n\n    render(){\n        const width50 = {width: '50%'}\n        return (\n            <>\n                <h3>Checklist Ketangkasan (berdasarkan pelbagai bingkai kerja populer)</h3>\n                <Table bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={width50}>The Checklist</th>\n                            <th style={width50}>The Why</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.checklistMapping() }\n                    </tbody>\n                </Table>\n                <Button\n                    variant=\"primary\"\n                    onClick={this.simpanChecklist}\n                    >\n                    Simpan\n                </Button>\n                <span>{this.state.notif}</span>\n                <hr/>\n                <h4>Kamipun mendengar penguna! Kirim pujian, kritik, atau saran ke Telegram <a href='https://t.me/RizkySyaiful'>@RizkySyaiful</a></h4>\n            </>\n        )\n    }\n\n\n    simpanChecklist = event => {\n        this.setState({\n            notif: \" menyimpan..\"\n        });\n\n        var user_checklist = []\n        \n        this.state.checklistWhy.forEach( item => {\n            if (typeof item.is_checked !== 'undefined') {\n                user_checklist.push({[item.slug]: item.is_checked})\n            }            \n        })\n\n        axios.post(process.env.REACT_APP_API_URL+'/api/users/checklist-update', {\n            user: this.state.user,\n            checklist: user_checklist \n        })\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    notif: \" berhasil tersimpan\"\n                });\n                setInterval(() => {\n                    this.setState({\n                        notif: null\n                    });\n                }, 2000);\n            });\n\n    }\n\n    handleChange = event => {\n        \n        const { value, checked } = event.target\n        console.log([value] + \" \" + checked)\n\n        let items = [...this.state.checklistWhy]\n        let item = items.filter( item => {\n            return item.id === value\n        })[0]\n         \n        item.is_checked = checked\n        item.the_why = checked ? item.if_yes_advice : item.if_no_advice\n\n        let temp = this.state.checklistWhy\n        for (var i = 0; i < temp.length; i++) {\n            if (temp[i].id === value){\n                temp[i] = item\n               \n                this.setState({\n                    checklistWhy: temp\n                })\n            }\n        }\n    \n        \n/*\n        this.state.practices.map( p => {\n            if(p.slug == [id]){\n                if(checked){\n                    console.log(p.if_yes_advice)\n                }else{\n                    console.log(p.if_no_advice)\n                }\n            }\n        })\n    */\n    }\n}\n\nexport default AgileChecklist","import React, { Component } from \"react\";\nimport axios from 'axios';\n\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default class MyRegisLoginForm extends Component  {\n\n    constructor(props){\n        \n        super(props)\n\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeSecretcode = this.onChangeSecretcode.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            username : '',\n            secretcode: '',\n            checklist: [],\n            notif: ''\n        }\n\n    }\n\n    onChangeUsername(e){\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    onChangeSecretcode(e){\n        this.setState({\n            secretcode: e.target.value\n        })\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n\n        this.setState({\n            notif: \" mencoba masuk..\"\n        });\n\n        const user = {\n            username: this.state.username,\n            secretcode: this.state.secretcode,\n            checklist: []\n        }\n\n        axios.post(process.env.REACT_APP_API_URL+'/api/users/enter', user)\n            .then(res => {\n                window.location = '/'+res.data._id;\n            }).catch(err => {\n                console.log(err)\n                this.setState({\n                    notif: \" Gagal masuk.\"\n                });\n                setInterval(() => {\n                    this.setState({\n                        notif: null\n                    }); \n                }, 5000);\n            });\n    }\n\n    render () {\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Alamat email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Masukkan alamat email Gmail\" name=\"username\" value={this.state.username} onChange={this.onChangeUsername} required/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Masukan password\" name=\"secretcode\" value={this.state.secretcode} onChange={this.onChangeSecretcode} required/>\n                    <Form.Text className=\"text-muted\">\n                        Ini adalah login sekaligus register. Jadi, ingat-ingat password kamu saat pertama masuk. Kontak tele @RizkySyaiful untuk reset password.\n                    </Form.Text>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Register / Login\n                </Button>\n                <span>{this.state.notif}</span>\n            </Form>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nimport { Row, Col } from \"react-bootstrap\";\n\nimport MyRegisLoginForm from \"./bootstrap-components/MyRegisLoginForm\"\n\nexport default class LandingPage extends Component  {\n    render(){\n        return(\n            <Row>\n                <Col>\n                    <h2>Konsultan Agile Digital</h2>\n                    <p>\n                        Di sini, kamu bisa menilai ketangkasan organisasi kamu sendiri &amp; mendapatkan saran yang sesuai. Informasi tersimpan agar bisa dinilai/dibaca lagi minggu depan.\n                    </p>\n                    <hr/>\n                </Col>\n                <Col md={5}>\n                    <MyRegisLoginForm/>\n                </Col>\n            </Row>\n        )\n    }    \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport MyNavbar from \"./bootstrap-components/MyNavbar\"\nimport Container from \"react-bootstrap/Container\";\n\nimport AgileChecklist from \"./AgileChecklist\"\nimport LandingPage from \"./LandingPage\";\n\nexport default () => (\n  <Router>\n    <MyNavbar />\n    <Container className=\"py-5\">\n      <Route path=\"/\" exact component={LandingPage} />\n      <Route path=\"/:id\" component={AgileChecklist} />\n    </Container>\n  </Router>\n);"],"sourceRoot":""}